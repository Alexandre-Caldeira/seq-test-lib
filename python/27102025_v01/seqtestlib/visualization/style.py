# seqtestlib/visualization/style.py
"""
Handles the styling and configuration for all plots generated by the library.
Provides a centralized function to apply journal-specific themes.
"""

import matplotlib.pyplot as plt

# Conversion constant for figure sizing
ONE_MM = 1 / 25.4  # Convert millimeters to inches

# --- Standard Journal Figure Sizes and Fonts ---
JOURNAL_SPECS = {
    'nature': {
        'font': 'Helvetica',
        'sizes': {'single': (90 * ONE_MM, 120 * ONE_MM), 'double': (180 * ONE_MM, 120 * ONE_MM)}
    },
    'ieee': {
        'font': 'Times New Roman',
        'sizes': {'single': (88.9 * ONE_MM, 110 * ONE_MM), 'double': (182 * ONE_MM, 110 * ONE_MM)}
    },
    'frontiers': { # Similar to Nature
        'font': 'Helvetica',
        'sizes': {'single': (85 * ONE_MM, 110 * ONE_MM), 'double': (180 * ONE_MM, 110 * ONE_MM)}
    },
    'elsevier': { # Generic Elsevier style
        'font': 'Times New Roman',
        'sizes': {'single': (90 * ONE_MM, 120 * ONE_MM), 'double': (190 * ONE_MM, 120 * ONE_MM)}
    }
}

def set_journal_style(journal: str = 'nature', column_width: str = 'double', dpi: int = 300):
    """
    Sets the global matplotlib rcParams for publication-quality plots.

    Args:
        journal (str): The target journal style. Options: 'nature', 'ieee', 'frontiers', 'elsevier'.
        column_width (str): The figure width. Options: 'single', 'double'.
        dpi (int): The resolution for the figure.
    """
    if journal.lower() not in JOURNAL_SPECS:
        raise ValueError(f"Journal '{journal}' not recognized. Available options: {list(JOURNAL_SPECS.keys())}")
    if column_width.lower() not in ['single', 'double']:
        raise ValueError("Column width must be 'single' or 'double'.")

    specs = JOURNAL_SPECS[journal.lower()]
    font_name = specs['font']
    fig_size = specs['sizes'][column_width.lower()]

    plt.rcParams.update({
        # Figure settings
        'figure.figsize': fig_size,
        'figure.dpi': dpi,

        # Font settings
        'font.family': 'sans-serif',
        'font.sans-serif': font_name,
        'font.size': 12,
        'text.usetex': False, # Set to False for broader compatibility, True if LaTeX is installed

        # Axes settings
        'axes.labelsize': 12,
        'axes.titlesize': 14,
        'axes.titlelocation': 'left',
        'axes.titleweight': 'bold',
        'axes.spines.right': False,
        'axes.spines.top': False,
        
        # Tick settings
        'xtick.labelsize': 10,
        'ytick.labelsize': 10,

        # Grid settings
        'axes.grid': True,
        'grid.linestyle': '-',
        'grid.alpha': 0.5,
        
        # Legend settings
        'legend.fontsize': 11,
        'legend.frameon': False,

        # MathText (for LaTeX-like symbols without full LaTeX)
        'mathtext.fontset': 'custom',
        'mathtext.rm': font_name,
        'mathtext.it': f'{font_name}:italic',
        'mathtext.bf': f'{font_name}:bold',
    })

if __name__ == '__main__':

    # Example usage and test plot
    set_journal_style(journal='nature', column_width='double')

    # Example data from your notebook
    import numpy as np
    a = np.arange(1, 100, 1)
    b = 10 * np.exp(-10 / a)

    plt.figure()
    plt.plot(a, b, label='Example Curve')
    plt.grid(True)
    plt.xlabel('Time [ms]')
    plt.ylabel(r"Voltage [$\mu V$]") # Example using Mathtext for Greek letters
    plt.suptitle(r'(A)', x=0.05, y=0.98, ha='left', fontsize=14, fontweight='bold')
    plt.title(r'Example Plot using Nature Style')
    plt.legend()
    plt.tight_layout(rect=[0, 0, 1, 0.95])
    plt.show()